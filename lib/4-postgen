#post_gen_1: remove empty manpages/folders and services files
#****************************************

func_post_gen_1() {
    dir="$base_dir/postgen-1"
    cp -r $base_dir/gen-3 $dir

    echo "* Total kaisen-services md files" 
    find $dir/ -iname "*able.md" -type f -empty | wc -l;
    echo "* Removed kaisen-services md files" 
    find $dir/ -iname "*able.md" -type f -empty -delete;
    echo "* Total empty md manpages files" 
    find $dir/ -iname "*.md" -type f -empty |wc -l;
    echo "* Removed empty md manpages files " 
    find $dir/ -iname "*.md" -type f -empty -delete;
    echo "* Removed empty folders " 
    find $dir/ -type d -empty -exec rm -rf {} \;
    echo "* Total remaining manpages md files " 
    find $dir/ -iname "*.md" -type f ! -name README.md |wc -l;
    echo "See listing of all manpages by categories generated:"
    sleep 5
    find "$dir/" -iname "*.md" -type f ! -name README.md |sort -u;

}

# post_gen_2 : Remove category folders with ";"
#****************************************

func_post_gen_2() {
    cp -r $base_dir/postgen-1 $base_dir/postgen-2
    find $base_dir/postgen-2 -type d -name "*;*" -exec rm -Rf {} \;
    echo "* Deleted useless categories folders"
}

# post_gen_3: generating wireguard/docker manpages & optionnaly generate no-manual list
#************************************

func_post_gen_3() {
    # manually generating missing manual in $dir/no-manual.log
    # cat output_fullbuild_05042021/postgen-2/no-manual.log | grep "Aucune"| awk -F " " '{print $6}'
    # generating supplementary manpages for wireguard :
    echo "* Generating missing wireguard manpages"
    man wg > $base_dir/postgen-2/VPN/wg.md
    man wg-quick > $base_dir/postgen-2/VPN/wg-quick.md
    # generating supplementary manpages for docker :
    echo "* Generating extra docker manpages"
    find /usr/share/man/ -iname "docker*" -printf '%f\n'|cut -d "." -f1 >  $base_dir/postgen-2/Docker/docker.list
    for dockeritem in $(more $base_dir/postgen-2/Docker/docker.list); do
    man $dockeritem 2> /dev/null > $base_dir/postgen-2/Docker/$dockeritem.md
    done
    rm -f $base_dir/postgen-2/Docker/docker.list
    #Remove docker-compose.md of development category
    rm -f $base_dir/postgen-2/Development/docker-compose.md
    #Add all kubectl manpages
    echo "* Generating extra kubectl manpages"
    find /usr/share/man/ -iname "kubectl*" -printf '%f\n'|cut -d "." -f1 >  $base_dir/postgen-2/Kubernetes/kubernetes.list
    for kubectlitem in $(more $base_dir/postgen-2/Kubernetes/kubernetes.list); do
    man $kubectlitem 2> /dev/null > $base_dir/postgen-2/Kubernetes/$kubectlitem.md
    done
    rm -f $base_dir/postgen-2/Kubernetes/kubernetes.list
    #Add all borg manpages
    echo "* Generating extra borg manpages"
    rm -f $base_dir/postgen-2/Backup/borg.md
    find /usr/share/man/ -iname "borg*" -printf '%f\n'|cut -d "." -f1 >  $base_dir/postgen-2/Borg/borg.list
    for borgitem in $(more $base_dir/postgen-2/Borg/borg.list); do
    man $borgitem 2> /dev/null > $base_dir/postgen-2/Borg/$borgitem.md
    done
    rm -f $base_dir/postgen-2/Borg/borg.list
    #Add all buildah manpages
    echo "* Generating extra buildah manpages"
    mkdir -p $base_dir/postgen-2/Buildah
    find /usr/share/man/ -iname "buildah*" -printf '%f\n'|cut -d "." -f1 >  $base_dir/postgen-2/Buildah/buildah.list
    for buildahitem in $(more $base_dir/postgen-2/Buildah/buildah.list); do
    man $buildahitem 2> /dev/null > $base_dir/postgen-2/Buildah/$buildahitem.md
    done
    rm -f $base_dir/postgen-2/Buildah/buildah.list
    #Move the buildah command manpage in the buildah category
    mv $base_dir/postgen-2/DevOps/buildah.md $base_dir/postgen-2/Buildah/
    #Add all nvme manpages
    echo "* Generating extra nvme manpages"
    mkdir -p $base_dir/postgen-2/NVME
    find /usr/share/man/ -iname "nvme*" -printf '%f\n'|cut -d "." -f1 >  $base_dir/postgen-2/NVME/nvme.list
    for nvmeitem in $(more $base_dir/postgen-2/NVME/nvme.list); do
    man $nvmeitem 2> /dev/null > $base_dir/postgen-2/NVME/$nvmeitem.md
    done
    rm -f $base_dir/postgen-2/NVME/nvme.list
    #Move the nvme command manpage in the nvme category
    mv $base_dir/postgen-2/DisksAnalysis/nvme.md $base_dir/postgen-2/NVME/
    mv $base_dir/postgen-2/PartitioningErasing/nvme.md $base_dir/postgen-2/NVME/
    #Add all podman manpages
    echo "* Generating extra podman manpages"
    mkdir -p $base_dir/postgen-2/Podman
    find /usr/share/man/ -iname "podman*" -printf '%f\n'|cut -d "." -f1 >  $base_dir/postgen-2/Podman/podman.list
    for podmanitem in $(more $base_dir/postgen-2/Podman/podman.list); do
    man $podmanitem 2> /dev/null > $base_dir/postgen-2/Podman/$podmanitem.md
    done
    rm -f $base_dir/postgen-2/Podman/podman.list
    #Move the podman command manpage in the podman category
    mv $base_dir/postgen-2/DevOps/podman.md $base_dir/postgen-2/Podman/
    #Add openstack manpage
    echo "* Generating openstack manpage"
    find /usr/share/man/ -iname "openstack*" -printf '%f\n'|cut -d "." -f1 >  $base_dir/postgen-2/DevOps/openstack.list
    for openstackitem in $(more $base_dir/postgen-2/DevOps/openstack.list); do
    man $openstackitem 2> /dev/null > $base_dir/postgen-2/DevOps/$openstackitem.md
    done
    rm -f $base_dir/postgen-2/DevOps/openstack.list
    #Add all lockfile manpages
    echo "* Generating extra lockfile manpages"
    find /usr/share/man/ -iname "lockfile-*" -printf '%f\n'|cut -d "." -f1 >  $base_dir/postgen-2/Dataprotection/lockfile.list
    for lockfileitem in $(more $base_dir/postgen-2/Dataprotection/lockfile.list); do
    man $lockfileitem 2> /dev/null > $base_dir/postgen-2/Dataprotection/$lockfileitem.md
    done
    rm -f $base_dir/postgen-2/Dataprotection/lockfile.list
    #Add all ClamAV manpages
    echo "* Generating extra clamav manpages"
    find /usr/share/man/ -iname "clam*" -printf '%f\n'|cut -d "." -f1 >  $base_dir/postgen-2/MalwareScan/clamav.list
    find /usr/share/man/ -iname "freshclam*" -printf '%f\n'|cut -d "." -f1 >>  $base_dir/postgen-2/MalwareScan/clamav.list
    for clamavitem in $(more $base_dir/postgen-2/MalwareScan/clamav.list); do
    man $clamavitem 2> /dev/null > $base_dir/postgen-2/MalwareScan/$clamavitem.md
    done
    rm -f $base_dir/postgen-2/MalwareScan/clamav.list
    #Add all ddrescue manpages
    echo "* Generating extra ddrescue manpages"
    find /usr/share/man/ -iname "dd_rescue*" -printf '%f\n'|cut -d "." -f1 >  $base_dir/postgen-2/Recovery/ddrescue.list
    find /usr/share/man/ -iname "ddr_*" -printf '%f\n'|cut -d "." -f1 >>  $base_dir/postgen-2/Recovery/ddrescue.list
    for ddrescueitem in $(more $base_dir/postgen-2/Recovery/ddrescue.list); do
    man $ddrescueitem 2> /dev/null > $base_dir/postgen-2/Recovery/$ddrescueitem.md
    done
    rm -f $base_dir/postgen-2/Recovery/ddrescue.list
    #Add ddrescuelog manpage
    echo "* Generating the ddrescuelog manpage"
    find /usr/share/man/ -iname "ddrescuelog*" -printf '%f\n'|cut -d "." -f1 >  $base_dir/postgen-2/Recovery/ddrescuelog.list
    for ddrescuelogitem in $(more $base_dir/postgen-2/Recovery/ddrescuelog.list); do
    man $ddrescuelogitem 2> /dev/null > $base_dir/postgen-2/Recovery/$ddrescuelogitem.md
    done
    rm -f $base_dir/postgen-2/Recovery/ddrescuelog.list
    #Add discover-config manpage
    echo "* Generating the discover-config manpage"
    find /usr/share/man/ -iname "discover-config*" -printf '%f\n'|cut -d "." -f1 >  $base_dir/postgen-2/Hardware/discover-config.list
    for discoverconfigitem in $(more $base_dir/postgen-2/Hardware/discover-config.list); do
    man $discoverconfigitem 2> /dev/null > $base_dir/postgen-2/Hardware/$discoverconfigitem.md
    done
    rm -f $base_dir/postgen-2/Hardware/discover-config.list
    #Add gpg and gpg-agent manpages
    echo "* Generating gpg and gpg-agent manpages"
    find /usr/share/man/ -iname "gpg.1*" -printf '%f\n'|cut -d "." -f1 >  $base_dir/postgen-2/Miscellaneous/gpg.list
    find /usr/share/man/ -iname "gpg-agent*" -printf '%f\n'|cut -d "." -f1 >>  $base_dir/postgen-2/Miscellaneous/gpg.list
    for gpgitem in $(more $base_dir/postgen-2/Miscellaneous/gpg.list); do
    man $gpgitem 2> /dev/null > $base_dir/postgen-2/Miscellaneous/$gpgitem.md
    done
    rm -f $base_dir/postgen-2/Miscellaneous/gpg.list
    #Add the hfs manpage
    echo "* Generating the hfs manpage"
    find /usr/share/man/ -iname "hfs.*" -printf '%f\n'|cut -d "." -f1 >  $base_dir/postgen-2/Filesystems/hfs.list
    find /usr/share/man/ -iname "hfsplus*" -printf '%f\n'|cut -d "." -f1 >  $base_dir/postgen-2/Filesystems/hfs.list
    for hfsitem in $(more $base_dir/postgen-2/Filesystems/hfs.list); do
    man $hfsitem 2> /dev/null > $base_dir/postgen-2/Filesystems/$hfsitem.md
    done
    rm -f $base_dir/postgen-2/Filesystems/hfs.list
    #Add the mc manpage
    echo "* Generating mc and mcedit manpages"
    find /usr/share/man/ -iname "mc.1*" -printf '%f\n'|cut -d "." -f1 >  $base_dir/postgen-2/Miscellaneous/mc.list
    find /usr/share/man/ -iname "mcedit*" -printf '%f\n'|cut -d "." -f1 >>  $base_dir/postgen-2/Miscellaneous/mc.list
    find /usr/share/man/ -iname "mcview*" -printf '%f\n'|cut -d "." -f1 >>  $base_dir/postgen-2/Miscellaneous/mc.list
    for mcitem in $(more $base_dir/postgen-2/Miscellaneous/mc.list); do
    man $mcitem 2> /dev/null > $base_dir/postgen-2/Miscellaneous/$mcitem.md
    done
    rm -f $base_dir/postgen-2/Miscellaneous/mc.list
    #Add all restic manpages
    echo "* Generating all restic manpages"
    mkdir -p $base_dir/postgen-2/Restic
    find /usr/share/man/ -iname "restic*" -printf '%f\n'|cut -d "." -f1 >  $base_dir/postgen-2/Restic/restic.list
    for resticitem in $(more $base_dir/postgen-2/Restic/restic.list); do
    man $resticitem 2> /dev/null > $base_dir/postgen-2/Restic/$resticitem.md
    done
    rm -f $base_dir/postgen-2/Restic/restic.list
    rm -f $base_dir/postgen-2/Backup/restic.md
    #Add all rsbackup manpages
    echo "* Generating all rsbackup manpages"
    mkdir -p $base_dir/postgen-2/Rsbackup
    find /usr/share/man/ -iname "rsbackup*" -printf '%f\n'|cut -d "." -f1 >  $base_dir/postgen-2/Rsbackup/rsbackup.list
    for rsbackupitem in $(more $base_dir/postgen-2/Rsbackup/rsbackup.list); do
    man $rsbackupitem 2> /dev/null > $base_dir/postgen-2/Rsbackup/$rsbackupitem.md
    done
    rm -f $base_dir/postgen-2/Rsbackup/rsbackup.list
    rm -f $base_dir/postgen-2/Backup/rsbackup.md
    #Add all zulu manpages
    echo "* Generating all zulu manpages"
    find /usr/share/man/ -iname "zuluC*" -printf '%f\n'|cut -d "." -f1 >  $base_dir/postgen-2/Dataprotection/zulu.list
    find /usr/share/man/ -iname "zuluM*" -printf '%f\n'|cut -d "." -f1 >>  $base_dir/postgen-2/Dataprotection/zulu.list
    for zuluitem in $(more $base_dir/postgen-2/Dataprotection/zulu.list); do
    man $zuluitem 2> /dev/null > $base_dir/postgen-2/Dataprotection/$zuluitem.md
    done
    rm -f $base_dir/postgen-2/Dataprotection/zulu.list
    #Add all arp tools manpages
    echo "* Generating all arp tools manpages"
    find /usr/share/man/man1 -iname "arp*" -printf '%f\n'|cut -d "." -f1 >  $base_dir/postgen-2/MAC/arp.list
    find /usr/share/man/man8 -iname "arp*" -printf '%f\n'|cut -d "." -f1 >>  $base_dir/postgen-2/MAC/arp.list
    for arpitem in $(more $base_dir/postgen-2/MAC/arp.list); do
    man $arpitem 2> /dev/null > $base_dir/postgen-2/MAC/$arpitem.md
    done
    rm -f $base_dir/postgen-2/MAC/arp.list
    #Add all bacula manpages
    echo "* Generating all bacula manpages"
    find /usr/share/man -iname "bacula*" -printf '%f\n'|cut -d "." -f1 >  $base_dir/postgen-2/Backup/bacula.list
    for baculaitem in $(more $base_dir/postgen-2/Backup/bacula.list); do
    man $baculaitem 2> /dev/null > $base_dir/postgen-2/Backup/$baculaitem.md
    done
    rm -f $base_dir/postgen-2/Backup/bacula.list
    #Add all btrfs manpages
    echo "* Generating all btrfs manpages"
    find /usr/share/man -iname "btrfs*" -printf '%f\n'|cut -d "." -f1 >  $base_dir/postgen-2/BTRFS/btrfs.list
    for btrfsitem in $(more $base_dir/postgen-2/BTRFS/btrfs.list); do
    man $btrfsitem 2> /dev/null > $base_dir/postgen-2/BTRFS/$btrfsitem.md
    done
    rm -f $base_dir/postgen-2/BTRFS/btrfs.list
    #Add dhclient manpage
    echo "* Generating the dhclient manpage"
    find /usr/share/man -iname "dhclient.*" -printf '%f\n'|cut -d "." -f1 >  $base_dir/postgen-2/DHCP/dhclient.list
    for dhclientitem in $(more $base_dir/postgen-2/DHCP/dhclient.list); do
    man $dhclientitem 2> /dev/null > $base_dir/postgen-2/DHCP/$dhclientitem.md
    done
    rm -f $base_dir/postgen-2/DHCP/dhclient.list
    #Add all fsck manpages
    echo "* Generating all fsck manpages"
    find /usr/share/man -iname "fsck*" -printf '%f\n'|cut -d "." -f1 >  $base_dir/postgen-2/FSCK/fsck.list
    for fsckitem in $(more $base_dir/postgen-2/FSCK/fsck.list); do
    man $fsckitem 2> /dev/null > $base_dir/postgen-2/FSCK/$fsckitem.md
    done
    rm -f $base_dir/postgen-2/FSCK/fsck.list
    #Add few iptables manpages
    echo "* Generating few iptables manpages"
    find /usr/share/man -iname "iptables.*" -printf '%f\n'|cut -d "." -f1 >  $base_dir/postgen-2/Firewalling/iptables.list
    find /usr/share/man -iname "iptables-restore.*" -printf '%f\n'|cut -d "." -f1 >>  $base_dir/postgen-2/Firewalling/iptables.list
    find /usr/share/man -iname "iptables-save.*" -printf '%f\n'|cut -d "." -f1 >>  $base_dir/postgen-2/Firewalling/iptables.list
    for iptablesitem in $(more $base_dir/postgen-2/Firewalling/iptables.list); do
    man $iptablesitem 2> /dev/null > $base_dir/postgen-2/Firewalling/$iptablesitem.md
    done
    rm -f $base_dir/postgen-2/Firewalling/iptables.list
    #Add all mkfs manpages
    echo "* Generating all mkfs manpages"
    find /usr/share/man -iname "mkfs*" -printf '%f\n'|cut -d "." -f1 >  $base_dir/postgen-2/MKFS/mkfs.list
    for mkfsitem in $(more $base_dir/postgen-2/MKFS/mkfs.list); do
    man $mkfsitem 2> /dev/null > $base_dir/postgen-2/MKFS/$mkfsitem.md
    done
    rm -f $base_dir/postgen-2/MKFS/mkfs.list
    #Add the nilfs manpage
    echo "* Generating the nilfs manpage"
    find /usr/share/man -iname "nilfs.*" -printf '%f\n'|cut -d "." -f1 >  $base_dir/postgen-2/NILFS/nilfs.list
    for nilfsitem in $(more $base_dir/postgen-2/NILFS/nilfs.list); do
    man $nilfsitem 2> /dev/null > $base_dir/postgen-2/NILFS/$nilfsitem.md
    done
    rm -f $base_dir/postgen-2/NILFS/nilfs.list
    #Add all LXC/LXD manpages
    echo "* Generating all LXC/LXD manpages"
    find /usr/share/man/man[18] -iname "lx[c|d].*" -printf '%f\n' | sed "s/.[1|8].[g|x]z$//" > $base_dir/postgen-2/LXC/LXC.list
    for lxcitem in $(more $base_dir/postgen-2/LXC/LXC.list); do
    man $lxcitem 2> /dev/null > $base_dir/postgen-2/LXC/$lxcitem.md
    done
    rm -f $base_dir/postgen-2/LXC/LXC.list

    #Remove manpages
    rm -f $base_dir/postgen-2/RemoteAdministration/connect.md
    rm -f $base_dir/postgen-2/RemoteAdministration/edit.md
    rm -f $base_dir/postgen-2/Scanner/full.md
    rm -f $base_dir/postgen-2/DisksAnalysis/fsck.md
    rm -f $base_dir/postgen-2/DisksAnalysis/sensors-detect.md
    rm -f $base_dir/postgen-2/Hardware/sensors-detect.md
    rm -f $base_dir/postgen-2/Backup/dirvish.md
    rm -f $base_dir/postgen-2/Backup/rdiff-backup-fs.md
    rm -f $base_dir/postgen-2/ConsolePort/port.md
    rm -f $base_dir/postgen-2/Ethernet/arpwatch.md
    rm -f $base_dir/postgen-2/IP/arpwatch.md
    rm -f $base_dir/postgen-2/Ethernet/wakeonlan.md
    rm -f $base_dir/postgen-2/Filesystems/lxcfs.md
    rm -f $base_dir/postgen-2/FTP/atftp.md
    rm -f $base_dir/postgen-2/FTP/smbclient.md
    rm -f $base_dir/postgen-2/Hardware/xsensors.md
    rm -f $base_dir/postgen-2/IP/nmap.md
    rm -f $base_dir/postgen-2/IP/ssmping.md
    rm -f $base_dir/postgen-2/PartitioningErasing/xfsrestore.md
    rm -f $base_dir/postgen-2/Backup/snapper.md
    # update
    cp -r $base_dir/postgen-2  $base_dir/postgen-3
    rm -f $base_dir/postgen-3/*.log
    echo "Total categories for kaisen linux menu :"
    find $base_dir/postgen-3/ -type d |wc -l
    echo "Total manpages generated for kaisen linux :"
    find $base_dir/postgen-3/ -iname "*.md" -type f ! -name README.md |wc -l
    #Remove non-uniq files
    echo "* Remove non-uniq manpages"
    find $base_dir/postgen-3 -type f -print0 | xargs -0 md5sum | awk 'h[$1]{ printf "%s\0", $2; next }{ h[$1] = $2 }' | xargs -0 rm
}

# post_gen_4: generate conf elixir mix files for categories and commands
#***********************************

func_post_gen_4() {
    
    mkdir $base_dir/postgen-4

    # generating elixir mix file : mix_category.exs

    # creating section extras with md files
    find $base_dir/postgen-3 -type f |sed 1d|awk -F "/" '{print $3"/"$4}' > $base_dir/postgen-4/md_categories.list
    sort $base_dir/postgen-4/md_categories.list > $base_dir/postgen-4/md_categories.list.sort
    mv $base_dir/postgen-4/md_categories.list.sort $base_dir/postgen-4/md_categories.list
    for md in  $(more $base_dir/postgen-4/md_categories.list); do
            echo "\"categories/$md\"," >> $base_dir/postgen-4/md_extras.list
    done
    sed -i '$s/,/ /' $base_dir/postgen-4/md_extras.list

    # creating section groups for extras
    find $base_dir/postgen-3 -type d | sed 1d|awk -F "/" '{print $3}' > $base_dir/postgen-4/categories.list
    sort $base_dir/postgen-4/categories.list > $base_dir/postgen-4/categories.list.sort                                                                                  
    mv $base_dir/postgen-4/categories.list.sort $base_dir/postgen-4/categories.list

    for category in $(more $base_dir/postgen-4/categories.list); do
        echo  "\"$category\": Path.wildcard(\"categories/$category/*.md\")," >> $base_dir/postgen-4/categories_group_extras.list
    done
    sed -i '$s/,/ /' $base_dir/postgen-4/categories_group_extras.list
    sort $base_dir/postgen-4/categories_group_extras.list > $base_dir/postgen-4/categories_group_extras.list.sort                                                                                  
    mv $base_dir/postgen-4/categories_group_extras.list.sort $base_dir/postgen-4/categories_group_extras.list

    # to fix use an empty mix_category from repo, wget and update with new values
cat <<EOF > $base_dir/postgen-4/mix_categories.exs
defmodule KaisenManpages.MixProject do
  use Mix.Project

  def project do
    [
      app: :kaisen_manpages,
      version: "$kaisen_release.0",
      elixir: "~> 1.18.4",
      start_permanent: Mix.env() == :prod,
      deps: deps(),

      # Docs
      name: "Manpages",
      homepage_url: "https://kaisenlinux.org/manpages/",
      authors: "Arnaud Cormier & Kevin Chevreuil",
      docs: [
         main: "readme",
         source_ref: "Tools categories manpages",
         api_reference: false,
         logo: "priv/assets/kaisen.png",
         assets: "priv/assets",
         before_closing_head_tag: &docs_before_closing_head_tag/1,
         formatters: ["html"],
         extra_section: "MANUALS",
         extras: [
          "categories/README.md",
         $(cat $base_dir/postgen-4/md_extras.list)


#: ["",
#	title: ""start with tcp dump"",
     ],
      #],"",
      groups_for_extras: [
   $(cat $base_dir/postgen-4/categories_group_extras.list)
   ],

    ],
    ]
  end

  # Run mix help compile.app" to learn about applications.
  def application do
    [
      extra_applications: [:logger]
    ]
  end

  # Run "mix help deps" to learn about dependencies.
  defp deps do
    [
    {:ex_doc, "~> 0.38.2", only: :dev, runtime: false},
    {:earmark, "~> 1.4.48"}
      # {:"dep_from_git, git: "https://github.com/elixir-lang/my_dep.git", tag: "0.1.0"}
    ]
  end

  # adding custom stylesheet
  defp docs_before_closing_head_tag(:html) do
    ~s{<link rel="stylesheet" href="assets/doc.css">}
  end
  defp docs_before_closing_head_tag(_), do: ""
end
EOF

   # generating elixir mix file : mix_commands.exs
    find $base_dir/postgen-3 -type f |sed 1d|awk -F "/" '{print $4}'|sort > $base_dir/postgen-4/md_commands.list
    sort $base_dir/postgen-4/md_commands.list > $base_dir/postgen-4/md_commands.list.sort
    mv $base_dir/postgen-4/md_commands.list.sort $base_dir/postgen-4/md_commands.list
    for command in $(more $base_dir/postgen-4/md_commands.list); do
        echo  "\"commands/$command\"," >> $base_dir/postgen-4/commands_extras.list
    done
    sed -i '$s/,/ /' $base_dir/postgen-4/commands_extras.list
    sort $base_dir/postgen-4/commands_extras.list > $base_dir/postgen-4/commands_extras.list.sort
    mv $base_dir/postgen-4/commands_extras.list.sort $base_dir/postgen-4/commands_extras.list

cat <<EOF > $base_dir/postgen-4/mix_commands.exs  
    defmodule KaisenManpages.MixProject do
  use Mix.Project

  def project do
    [
      app: :kaisen_manpages,
      version: "$kaisen_release.0",
      elixir: "~> 1.18.4",
      start_permanent: Mix.env() == :prod,
      deps: deps(),

      # Docs
      name: "Manpages",
      homepage_url: "https://kaisenlinux.org/manpages/",
      authors: "Arnaud Cormier & Kevin Chevreuil",
      docs: [
         main: "readme",
         source_ref: "Commands",
         api_reference: false,
         logo: "priv/assets/kaisen.png",
         assets: "priv/assets",
         before_closing_head_tag: &docs_before_closing_head_tag/1,
         formatters: ["html"],
         extra_section: "MANUALS",
         output: "doc/commands",
         extras: [
          "commands/README.md",
          $(cat $base_dir/postgen-4/commands_extras.list)
   
#: ["",
#	title: ""start with tcp dump"",
     ],
      #],"",
      groups_for_extras: [
     # "SubMenu SysOps": [~r"/ansible", ~r"/docker", ~r"/jmeter", ~r"/kube", ~r"/lxc", ~r"/packer", ~r"/puppet", ~r"/vagrant"],
      "Command name manpages": Path.wildcard("commands/*.md")
   ],

    ],
    ]
  end

  # Run mix help compile.app" to learn about applications.
  def application do
    [
      extra_applications: [:logger]
    ]
  end

  # Run "mix help deps" to learn about dependencies.
  defp deps do
    [
    {:ex_doc, "~> 0.38.2", only: :dev, runtime: false},
    {:earmark, "~> 1.4.48"}
      # {:"dep_from_git, git: "https://github.com/elixir-lang/my_dep.git", tag: "0.1.0"}
    ]
  end

  # adding custom stylesheet
  defp docs_before_closing_head_tag(:html) do
    ~s{<link rel="stylesheet" href="assets/doc.css">}
  end
  defp docs_before_closing_head_tag(_), do: ""
end
EOF

## BEGIN : generate MIX MANPAGES 5 : Configuration files

## Prepare manpages in postgen-man5
    mkdir -p $base_dir/postgen-man5/configuration_files
    echo "* Generating manpages 5"
    apropos -s 5 . >> $base_dir/postgen-man5/configuration_files/man5.list
    
    cut -d " " -f1 $base_dir/postgen-man5/configuration_files/man5.list > $base_dir/postgen-man5/configuration_files/configuration_files.list
    sort $base_dir/postgen-man5/configuration_files.list > $base_dir/postgen-man5/configuration_files.list.sort
    mv $base_dir/postgen-man5/configuration_files.list.sort $base_dir/postgen-man5/configuration_files.list
    rm $base_dir/postgen-man5/configuration_files/man5.list
    # remove . files
    sed -i '/^\./d' $base_dir/postgen-man5/configuration_files/configuration_files.list

    for man5item in $(more $base_dir/postgen-man5/configuration_files/configuration_files.list); do
    man $man5item 2> /dev/null > $base_dir/postgen-man5/configuration_files/$man5item.md
    done
    # remove files staring with .
    find $base_dir/postgen-man5/ -name ".*.md" -exec rm -f {} \;
 
 ## Generate mix files
    # mv man5 list in postgen4
    mv $base_dir/postgen-man5/configuration_files/configuration_files.list $base_dir/postgen-4/configuration_files.list
    sort $base_dir/postgen-4/configuration_files.list > $base_dir/postgen-4/configuration_files.list.sort
    mv $base_dir/postgen-4/configuration_files.list.sort $base_dir/postgen-4/configuration_files.list
    # generate list of files in .md
    sed -i 's/$/.md/g' $base_dir/postgen-4/configuration_files.list
    # prepare mix dir for extras 
     for cfg in $(more $base_dir/postgen-4/configuration_files.list); do
        echo  "\"configuration_files/$cfg\"," >> $base_dir/postgen-4/configuration_files_extras.list
    done
    sed -i '$s/,/ /' $base_dir/postgen-4/configuration_files_extras.list
    sort $base_dir/postgen-4/configuration_files_extras.list > $base_dir/postgen-4/configuration_files_extras.list.sort
    mv $base_dir/postgen-4/configuration_files_extras.list.sort $base_dir/postgen-4/configuration_files_extras.list

    ## extras file generation
    cat <<EOF > $base_dir/postgen-4/mix_configuration_files.exs  
    defmodule KaisenManpages.MixProject do
  use Mix.Project

  def project do
    [
      app: :kaisen_manpages,
      version: "$kaisen_release.0",
      elixir: "~> 1.18.4",
      start_permanent: Mix.env() == :prod,
      deps: deps(),

      # Docs
      name: "Manpages",
      homepage_url: "https://kaisenlinux.org/manpages/",
      authors: "Arnaud Cormier & Kevin Chevreuil",
      docs: [
         main: "readme",
         source_ref: "Configuration files manpages",
         api_reference: false,
         logo: "priv/assets/kaisen.png",
         assets: "priv/assets",
         before_closing_head_tag: &docs_before_closing_head_tag/1,
         formatters: ["html"],
         extra_section: "MANUALS",
         output: "doc/configuration_files",
         extras: [
          "configuration_files/README.md",
          $(cat $base_dir/postgen-4/configuration_files_extras.list)
   
     ],
      groups_for_extras: [
      "Configurations files manpages": Path.wildcard("configuration_files/*.md")
   ],

    ],
    ]
  end

  # Run mix help compile.app" to learn about applications.
  def application do
    [
      extra_applications: [:logger]
    ]
  end

  # Run "mix help deps" to learn about dependencies.
  defp deps do
    [
    {:ex_doc, "~> 0.38.2", only: :dev, runtime: false},
    {:earmark, "~> 1.4.48"}
      # {:"dep_from_git, git: "https://github.com/elixir-lang/my_dep.git", tag: "0.1.0"}
    ]
  end

  # adding custom stylesheet
  defp docs_before_closing_head_tag(:html) do
    ~s{<link rel="stylesheet" href="assets/doc.css">}
  end
  defp docs_before_closing_head_tag(_), do: ""
end
EOF

## END : generate MIX MANPAGES 5 : Configuration files

}

# post_gen_5: copy mix files / commands folder / categories folder in postgen-5
#*********************************************

func_post_gen_5() {
    mkdir $base_dir/postgen-5
    cp -r $base_dir/postgen-3/ $base_dir/postgen-5/categories 2>/dev/null
    mkdir $base_dir/postgen-5/commands
    cp -f $base_dir/postgen-3/*/*.md $base_dir/postgen-5/commands 2>/dev/null
    cp -f $base_dir/postgen-4/*.exs $base_dir/postgen-5 2>/dev/null
    # generation for man 5 configuration files
    mkdir $base_dir/postgen-5/configuration_files
    cp -r $base_dir/postgen-man5/configuration_files/*.md $base_dir/postgen-5/configuration_files 2>/dev/null
    #
    echo "* Create mix_categories.exs"
    echo "* Create mix_commands.exs"
    echo "* Create mix_configuration_files.exs"
    echo "* Create categories folder with all manpages"
    echo "* Create commands folder with all manpages"
    echo "* Create configuration_files folder with all manpages"
    echo "Project files are ready to be copied from: $base_dir/postgen-5"
}

# post_gen_5 bis: create readme for commands and categories with updated count of manpages
#***************************************

func_post_gen_5bis() {

total_manpages=$(find $base_dir/postgen-5/commands/ -iname "*.md" ! -name README.md | wc -l)
readme_commands="command name"
readme_categories="tools categories"
# man 5
total_manpages5=$(find $base_dir/postgen-5/configuration_files/ -iname "*.md" ! -name README.md | wc -l)
readme_configuration_files="configuration files manpages"


cat <<EOF > $base_dir/postgen-5/categories/README.md

# Kaisen Linux | Manpages

This documentation contains **$total_manpages manual pages** for applications from **kaisen menu** sorted by categories.  
Some tools such as Podman and Buildah have many manpages for all their commands. They have therefore been classified as categories in their own right and are not placed in the same category as on the Kaisen Linux menu. 

![kaisen-menu](assets/kaisen_menu.png)

## Manpages by command name

You can switch to sorted manpages by **$readme_commands** [by clicking here](./commands/readme.html)

## Configuration files manpages

There is also **$total_manpages5 manpages for configuration files** (man5) [by clicking here](./configuration_files/readme.html)

## Other Links

* Check the [official Kaisen Linux](https://kaisenlinux.org/) website.
* Check the [official Kaisen Linux documentation](https://kaisenlinux.org/documentation/).
* Check [Debian testing manpages](https://manpages.debian.org/contents-testing.html) for additionnal help. 

## Contributors

Manpages for Kaisen Linux made by Arnaud Cormier and Kevin Chevreuil
EOF

cat <<EOF > $base_dir/postgen-5/commands/README.md 

# Kaisen Linux | Manpages

This documentation contains **$total_manpages manual pages** for applications from **kaisen menu** sorted by command name.  

![kaisen-menu](assets/kaisen_menu.png)

## Tools by categories manpages

You can switch to sorted manpages by **$readme_categories** [by clicking here](../readme.html)

## Configuration files manpages

There is also **$total_manpages5 manpages for configuration files** (man5) [by clicking here](../configuration_files/readme.html)

## Other Links

* Check the [official Kaisen Linux](https://kaisenlinux.org/) website.
* Check the [official Kaisen Linux documentation](https://kaisenlinux.org/documentation/).
* Check [Debian testing manpages](https://manpages.debian.org/contents-testing.html) for additionnal help. 

## Contributors

Manpages for Kaisen Linux made by Arnaud Cormier and Kevin Chevreuil
EOF

cat <<EOF > $base_dir/postgen-5/configuration_files/README.md 

# Kaisen Linux | Manpages

This documentation contains **$total_manpages5** of configuration manuals from section 5 of **kaisenlinux** manpages.

![kaisen-menu](assets/kaisen_menu.png)

## Manpages by command name

You can switch to sorted manpages by **$readme_commands** [by clicking here](../commands/readme.html)

## Tools by categories manpages

You can also switch to sorted manpages **$readme_categories** [by clicking here](../readme.html)

## Other Links

* Check the [official Kaisen Linux](https://kaisenlinux.org/) website.
* Check the [official Kaisen Linux documentation](https://kaisenlinux.org/documentation/).
* Check [Debian testing manpages](https://manpages.debian.org/contents-testing.html) for additionnal help. 

## Contributors

Manpages for Kaisen Linux made by Arnaud Cormier and Kevin Chevreuil
EOF

echo "* Adding updated README for categories & commands & configuration_files folder in $base_dir/postgen-5"
}
